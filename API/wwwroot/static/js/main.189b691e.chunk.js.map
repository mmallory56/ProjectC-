{"version":3,"sources":["app/models/pagination.ts","app/api/agent.ts","app/models/activity.ts","app/models/profile.ts","app/stores/activityStore.ts","app/stores/profilesStore.ts","app/stores/userStore.ts","app/stores/store.ts","app/stores/commonStore.ts","app/stores/modalStore.ts","app/stores/commentStore.ts","app/layout/NavBar.tsx","features/activities/dashboard/ActivityFilters.tsx","features/profiles/FollowButton.tsx","features/profiles/ProfileCard.tsx","features/activities/dashboard/ActivityListItemAttendee.tsx","features/activities/dashboard/ActivityListItem.tsx","features/activities/dashboard/ActivityList.tsx","features/activities/dashboard/ActivityListItemPlaceHolder.tsx","features/activities/dashboard/ActivityDashboard.tsx","app/layout/LoadingComponent.tsx","app/common/form/MyTextInput.tsx","features/users/LoginForm.tsx","features/errors/ValidationErrors.tsx","features/users/RegisterForm.tsx","features/activities/Home/HomePage.tsx","app/common/form/MyTextArea.tsx","app/common/form/MySelectInput.tsx","app/common/options/categoryOptions.ts","app/common/form/MyDateInput.tsx","features/activities/form/ActivityForm.tsx","features/activities/details/ActivityDetailedChat.tsx","features/activities/details/ActivityDetailedHeader.tsx","features/activities/details/ActivityDetailedInfo.tsx","features/activities/details/ActivityDetailedSideBar.tsx","features/activities/details/ActivityDetails.tsx","features/errors/TestError.tsx","features/errors/NotFound.tsx","features/errors/ServerError.tsx","app/common/modals/ModalContainer.tsx","features/profiles/ProfileFollowings.tsx","app/common/imageUpload/PhotoWidgetCropper.tsx","app/common/imageUpload/PhotoWidgetDropZone.tsx","app/common/imageUpload/PhotoUploadWidget.tsx","features/profiles/ProfilePhotos.tsx","features/profiles/ProfileContent.tsx","features/profiles/ProfileHeader.tsx","features/profiles/ProfilePage.tsx","app/layout/PrivateRoute.tsx","app/layout/App.tsx","reportWebVitals.ts","app/layout/ScrollToTop.tsx","index.tsx"],"names":["PaginatedResults","data","pagination","this","PagingParams","pageNumber","pageSize","axios","defaults","baseURL","process","interceptors","request","use","config","token","store","commonStore","headers","Authorization","response","a","JSON","parse","error","status","toast","method","errors","hasOwnProperty","history","push","modalStateErrors","key","flat","setServerError","Promise","reject","responseBody","requests","url","get","then","body","post","put","delete","agent","Activities","list","params","details","id","create","activity","update","attend","Account","current","login","user","register","Profiles","username","uploadPhoto","file","formData","FormData","append","setMainPhoto","deletePhoto","updateFollowing","listFollowings","predicate","Activity","init","Object","assign","ActivityFormValues","undefined","title","category","description","date","city","venue","Profile","displayName","image","ActivityStore","activityRegistry","Map","selectedActivity","editMode","loading","loadingInitial","pagingParams","set","setPagingParams","setPredicate","value","resetPredicate","forEach","loadactivities","setLoadingInitial","axiosParams","result","runInAction","setActivity","setPagination","console","log","loadActivity","getActivity","userStore","isGoing","attendees","some","isHost","hostUsername","host","find","Date","state","setLoading","createActivity","attendee","newActivity","editActivity","editedActivity","deleteActivity","updateAttendance","filter","cancelActivityToggle","isCancelled","clearSelectedActivity","updateAttendeeFollowing","following","followersCount","makeAutoObservable","reaction","keys","clear","URLSearchParams","toString","toISOString","Array","from","values","sort","b","getTime","entries","ActivitiesByDate","reduce","activities","format","ProfilesStore","profile","loadingProfile","uploading","loadingDelete","followings","loadingFollowings","activeTab","loadProfile","photo","photos","isMain","setImage","c","p","activityStore","loadFollowings","UserStore","creds","setToken","modalStore","closeModal","logout","window","localStorage","removeItem","getUser","getItem","appLoaded","setAppLoaded","setItem","modal","open","openModal","content","profilesStore","commentStore","comments","hubConnection","createHubConnection","activityId","HubConnectionBuilder","withUrl","accessTokenFactory","withAutomaticReconnect","configureLogging","LogLevel","Information","build","start","catch","on","comment","createdAt","unshift","stopHubConnection","stop","clearComments","addComment","invoke","StoreContext","createContext","useStore","useContext","observer","Menu","inverted","fixed","Container","Item","as","NavLink","to","exact","header","src","alt","style","marginRight","name","Button","positive","position","Image","avatar","spaced","Dropdown","pointing","text","Link","icon","onClick","vertical","size","width","Header","attached","color","contents","active","has","onChange","Reveal","animated","Content","visible","fluid","hidden","basic","e","preventDefault","handleFollow","Card","Description","Icon","styles","borderColor","borderWidth","List","horizontal","map","Popup","hoverable","trigger","circular","bordered","useState","Segment","Group","Label","textAlign","secondary","clearing","floated","groupedActivities","group","sub","ActivityListItemPlaceholder","Placeholder","marginTop","minHeight","Line","Paragraph","disabled","loadingNext","setLoadingNext","useEffect","Grid","Column","pageStart","loadMore","currentPage","hasMore","totalPages","initialLoad","Loader","LoadingComponent","Dimmer","MyTextInput","props","useField","field","meta","Form","Field","touched","label","initialValues","email","password","onSubmit","setErrors","handleSubmit","isSubmitting","isValid","dirty","className","autoComplete","placeholder","type","render","marginBottom","ValidationErrors","Message","i","validationSchema","Yup","required","isLoggedIn","MyTextArea","MySelectInput","helpers","Select","clearable","options","d","setValue","onBlur","setTouched","categoryOptions","MyDateInput","selected","useHistory","useParams","nullable","uuidv4","enableReinitialize","rows","placeholderText","showTimeSelect","timeCaption","dateFormat","border","Comment","Avatar","Author","Metadata","formatDistanceToNow","Text","whiteSpace","resetForm","onKeyPress","shiftKey","activityImageStyle","activityImageTextStyle","bottom","left","height","padding","zIndex","top","ribbon","verticalAlign","length","relaxed","divided","Extra","ActivityDetailedSideBar","TestErrors","widths","baseUrl","err","primary","NotFound","Inline","message","Modal","onClose","Tab","Pane","itemsPerRow","PhotoWidgetCropper","setCropper","imagePreview","initialAspectRatio","aspectRatio","preview","guides","viewMode","autoCropArea","background","onInitialized","cropper","PhotoWidgetDropZone","setFiles","dzStyles","borderRadius","paddingTop","onDrop","useCallback","acceptedFiles","URL","createObjectURL","useDropzone","getRootProps","getInputProps","isDragActive","PhotoUploadWidget","handlePhotoUpload","files","revokeObjectURL","overflow","getCroppedCanvas","toBlob","blob","isCurrentUser","addPhotoMode","setAddPhotoMode","target","setTarget","currentTarget","handleSetMainPhoto","confirm","handleDeletePhoto","panes","menuItem","menu","menuPosition","onTabChange","setActiveTab","activeIndex","Statistic","followingCount","Divider","PrivateRoute","Component","component","rest","location","useLocation","finally","hideProgressBar","path","HomePage","ActivityDetails","ActivityDashboard","ActivityForm","ProfilePage","ServerError","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ScrollToTop","pathname","scrollTo","createBrowserHistory","ReactDOM","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.189b691e.chunk.js","sourcesContent":["export interface Pagination {\r\n  currentPage: number;\r\n  itemsPerPage: number;\r\n  totalItems: number;\r\n  totalPages: number;\r\n}\r\n\r\nexport class PaginatedResults<T> {\r\n  data: T;\r\n  pagination: Pagination;\r\n\r\n  constructor(data: T, pagination: Pagination) {\r\n    this.data = data;\r\n    this.pagination = pagination;\r\n  }\r\n}\r\n\r\nexport class PagingParams {\r\n  pageNumber:number;\r\n  pageSize:number;\r\n  constructor(pageNumber=1,pageSize=2) {\r\n    this.pageNumber = pageNumber;\r\n    this.pageSize = pageSize;\r\n  }\r\n}\r\n","import axios, { AxiosError, AxiosResponse } from \"axios\";\r\nimport { request } from \"http\";\r\nimport { toast } from \"react-toastify\";\r\nimport { history } from \"../..\";\r\nimport { Activity, ActivityFormValues } from \"../models/activity\";\r\nimport { PaginatedResults } from \"../models/pagination\";\r\nimport { Photo, Profile } from \"../models/profile\";\r\nimport { User, UserFormValues } from \"../models/user\";\r\nimport { store } from \"../stores/store\";\r\n\r\nconst sleep = (delay: number) => {\r\n  return new Promise((resolve) => {\r\n    setTimeout(resolve, delay);\r\n  });\r\n};\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\naxios.interceptors.request.use((config) => {\r\n  const token = store.commonStore.token;\r\n  if (token) config.headers.Authorization = `Bearer ${token}`;\r\n  return config;\r\n});\r\naxios.interceptors.response.use(\r\n  \r\n  async (response) => {\r\n    if(process.env.NODE_ENV === 'development')await sleep(1000);\r\n    \r\n    const pagination = response.headers['pagination'];\r\n    if(pagination){\r\n      response.data = new PaginatedResults(response.data,JSON.parse(pagination));\r\n      return response as AxiosResponse<PaginatedResults<any>>\r\n    }\r\n    return response;\r\n  },\r\n  (error: AxiosError) => {\r\n    const { data, status, config } = error.response!;\r\n    switch (status) {\r\n      case 400:\r\n        if (typeof data === \"string\") {\r\n          toast.error(data);\r\n        }\r\n        if (config.method === \"get\" && data.errors.hasOwnProperty(\"id\")) {\r\n          history.push(\"/not-found\");\r\n        }\r\n        if (data.errors) {\r\n          const modalStateErrors = [];\r\n          for (const key in data.errors) {\r\n            if (data.errors[key]) {\r\n              modalStateErrors.push(data.errors[key]);\r\n            }\r\n          }\r\n          throw modalStateErrors.flat();\r\n        }\r\n\r\n        break;\r\n      case 401:\r\n        toast.error(\"unauthorised\");\r\n        break;\r\n      case 404:\r\n        history.push(\"/Not-Found\");\r\n        break;\r\n      case 500:\r\n        store.commonStore.setServerError(data);\r\n        history.push(\"/server-error\");\r\n        break;\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\nconst responseBody = <T>(response: AxiosResponse<T>) => response.data;\r\n\r\nconst requests = {\r\n  get: <T>(url: string) => axios.get<T>(url).then(responseBody),\r\n  post: <T>(url: string, body: {}) =>\r\n    axios.post<T>(url, body).then(responseBody),\r\n  put: <T>(url: string, body: {}) => axios.put<T>(url, body).then(responseBody),\r\n  delete: <T>(url: string) => axios.delete<T>(url).then(responseBody),\r\n};\r\n\r\nconst Activities = {\r\n  list: (params: URLSearchParams) => axios.get<PaginatedResults<Activity[]>>(\"/activities\",{params}).then(responseBody),\r\n  details: (id: string) => requests.get<Activity>(`/activities/${id}`),\r\n  create: (activity: ActivityFormValues) =>\r\n    requests.post<void>(\"/activities\", activity),\r\n  update: (activity: ActivityFormValues) =>\r\n    requests.put<void>(`/activities/${activity.id}`, activity),\r\n  delete: (id: string) => requests.delete<void>(`/activities/${id}`),\r\n  attend: (id: string) => requests.post<void>(`/activities/${id}/attend`, {}),\r\n};\r\nconst Account = {\r\n  current: () => requests.get<User>(\"/account\"),\r\n  login: (user: UserFormValues) => requests.post<User>(\"/account/login\", user),\r\n  register: (user: UserFormValues) =>\r\n    requests.post<User>(\"/account/register\", user),\r\n};\r\nconst Profiles = {\r\n  get: (username: string) => requests.get<Profile>(`/profiles/${username}`),\r\n  uploadPhoto: (file: any) => {\r\n    let formData = new FormData();\r\n    formData.append(\"File\", file);\r\n    return axios.post<Photo>(\"photos\", formData, {\r\n      headers: { \"Content-type\": \"multipart/form-data\" },\r\n    });\r\n  },\r\n  setMainPhoto: (id: string) => requests.post(`/photos/${id}/setMain`, {}),\r\n  deletePhoto: (id: string) => requests.delete(`/photos/${id}`),\r\n  updateFollowing: (username: string) =>\r\n    requests.post(`/follow/${username}`, {}),\r\n  listFollowings: (username: string, predicate: string) =>\r\n    requests.get<Profile[]>(`/follow/${username}?predicate=${predicate}`),\r\n};\r\nconst agent = {\r\n  Activities,\r\n  Account,\r\n  Profiles,\r\n};\r\n\r\nexport default agent;\r\n","import { Profile } from \"./profile\";\r\n\r\nexport interface Activity {\r\n  id: string;\r\n  title: string;\r\n  date: Date|null;\r\n  description: string;\r\n  category: string;\r\n  city: string;\r\n  venue: string;\r\n  hostUsername:string;\r\n  isCancelled:boolean;\r\n  isHost: boolean;\r\n  isGoing: boolean;\r\n  host?:Profile;\r\n  attendees:Profile[];\r\n}\r\n\r\nexport class Activity implements Activity{\r\n  constructor(init?:ActivityFormValues){\r\n    Object.assign(this,init);\r\n  }\r\n}\r\n\r\nexport class ActivityFormValues{\r\n  id?: string = undefined;\r\n  title?: string = \"\";\r\n  category?: string =\"\";\r\n  description?: string =\"\";\r\n  date?:  Date|null;\r\n  city?: string =\"\"\r\n  venue?: string =\"\"\r\n  constructor(activity?:ActivityFormValues) {\r\n    if(activity){\r\n      this.id = activity.id;\r\n      this.title = activity.title;\r\n      this.category = activity.category;\r\n      this.description = activity.description;\r\n      this.date = activity.date;\r\n      this.city = activity.city;\r\n      this.venue = activity.venue;\r\n    }\r\n  }\r\n}\r\n","import { User } from \"./user\";\r\n\r\nexport interface Profile{\r\n    username:string;\r\n    displayName: string;\r\n    image?: string;\r\n    bio?:string;\r\n    followersCount:number;\r\n    followingCount:number;\r\n    following:boolean;\r\n    photos?: Photo[]\r\n}\r\n\r\nexport class Profile implements Profile{\r\n    constructor(user:User){\r\n        this.username = user.username;\r\n        this.displayName = user.displayName;\r\n        this.image = user.image;\r\n     \r\n    }\r\n}\r\n\r\nexport interface Photo{\r\n    id:string;\r\n    url:string;\r\n    isMain: boolean;\r\n}","import { format } from \"date-fns\";\r\nimport {\r\n  action,\r\n  makeAutoObservable,\r\n  makeObservable,\r\n  observable,\r\n  reaction,\r\n  runInAction,\r\n} from \"mobx\";\r\nimport { act } from \"react-dom/test-utils\";\r\nimport agent from \"../api/agent\";\r\nimport { Activity, ActivityFormValues } from \"../models/activity\";\r\nimport { Pagination, PagingParams } from \"../models/pagination\";\r\nimport { Profile } from \"../models/profile\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class ActivityStore {\r\n  activityRegistry = new Map<string, Activity>();\r\n  selectedActivity: Activity | undefined = undefined;\r\n  editMode = false;\r\n  loading = false;\r\n  loadingInitial = false;\r\n  pagination:Pagination|null=null;\r\n  pagingParams=new PagingParams(1);\r\n  predicate = new Map().set(\"all\",true);\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n\r\n    reaction(()=>this.predicate.keys(),()=>{\r\n      this.pagingParams = new PagingParams();\r\n      this.activityRegistry.clear();\r\n      this.loadactivities();\r\n    }\r\n\r\n    )\r\n  }\r\n  setPagingParams=(pagingParams:PagingParams)=>{\r\n    this.pagingParams = pagingParams;\r\n  }\r\n\r\n  setPredicate=(predicate:string,value:string|Date)=>{\r\n    const resetPredicate = ()=>{\r\n      this.predicate.forEach((value,key)=>{\r\n        if(key !=='startDate')this.predicate.delete(key);\r\n\r\n      })\r\n    }\r\n        switch (predicate) {\r\n          case \"all\":\r\n            resetPredicate();\r\n            this.predicate.set(\"all\",true);\r\n            break;\r\n          case \"isGoing\":\r\n            resetPredicate();\r\n            this.predicate.set(\"isGoing\",true);\r\n            break;\r\n          case \"isHost\":\r\n            resetPredicate();\r\n            this.predicate.set(\"isHost\",true);\r\n            break;\r\n          case \"startDate\":\r\n            \r\n            this.predicate.delete(\"startDate\");\r\n            this.predicate.set(\"startDate\",value);\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n  }\r\n\r\n  get axiosParams(){\r\n    const params = new URLSearchParams();\r\n    params.append('pageNumber',this.pagingParams.pageNumber.toString())\r\n    params.append(\"pageSize\",this.pagingParams.pageSize.toString());\r\n    this.predicate.forEach((value,key)=>{\r\n      if(key===\"start\"){\r\n        params.append(key,(value as Date).toISOString())\r\n      }else{\r\n        params.append(key,value);\r\n      }\r\n    })\r\n    return params;\r\n  }\r\n  get ActivitiesByDate() {\r\n    return Array.from(this.activityRegistry.values()).sort(\r\n      (a, b) => a.date!.getTime() - b.date!.getTime()\r\n    );\r\n  }\r\n  loadactivities = async () => {\r\n    this.setLoadingInitial(true);\r\n    try {\r\n      const result = await agent.Activities.list(this.axiosParams);\r\n      runInAction(() => {\r\n        result.data.forEach((activity) => {\r\n          this.setActivity(activity);\r\n        });\r\n        this.setPagination(result.pagination)\r\n        this.setLoadingInitial(false);\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      this.setLoadingInitial(false);\r\n    }\r\n  };\r\n  setPagination =(pagination:Pagination)=>{\r\n      this.pagination = pagination;\r\n  }\r\n  get groupedActivities() {\r\n    return Object.entries(\r\n      this.ActivitiesByDate.reduce((activities, activity) => {\r\n        const date = format(activity.date!, \"dd MMM yyyy\");\r\n        activities[date] = activities[date]\r\n          ? [...activities[date], activity]\r\n          : [activity];\r\n        return activities;\r\n      }, {} as { [key: string]: Activity[] })\r\n    );\r\n  }\r\n  loadActivity = async (id: string) => {\r\n    let activity = this.getActivity(id);\r\n    if (activity) {\r\n      this.selectedActivity = activity;\r\n      return activity;\r\n    } else {\r\n      this.loadingInitial = true;\r\n      try {\r\n        activity = await agent.Activities.details(id);\r\n        this.setActivity(activity);\r\n        this.selectedActivity = activity;\r\n        this.setLoadingInitial(false);\r\n        return activity;\r\n      } catch (error) {\r\n        console.log(error);\r\n        this.setLoadingInitial(false);\r\n      }\r\n    }\r\n  };\r\n  private setActivity = (activity: Activity) => {\r\n    const user = store.userStore.user;\r\n    if (user) {\r\n      activity.isGoing = activity.attendees!.some(\r\n        (a) => a.username === user.username\r\n      );\r\n      activity.isHost = activity.hostUsername === user.username;\r\n      activity.host = activity.attendees?.find((a)=>a.username===activity.hostUsername)\r\n    }\r\n\r\n    activity.date = new Date(activity.date!);\r\n    this.activityRegistry.set(activity.id, activity);\r\n  };\r\n  private getActivity = (id: string) => {\r\n    return this.activityRegistry.get(id);\r\n  };\r\n  setLoadingInitial = (state: boolean) => {\r\n    this.loadingInitial = state;\r\n  };\r\n  setLoading = (state: boolean) => {\r\n    this.loading = state;\r\n  };\r\n\r\n  createActivity = async (activity: ActivityFormValues) => {\r\n    const user = store.userStore.user;\r\n    const attendee = new Profile(user!);\r\n    try {\r\n      await agent.Activities.create(activity);\r\n      const newActivity = new Activity(activity);\r\n      newActivity.hostUsername = user!.username;\r\n      newActivity.attendees = [attendee];\r\n      this.setActivity(newActivity);\r\n      runInAction(() => {\r\n       \r\n        this.selectedActivity = newActivity;\r\n        \r\n      });\r\n   \r\n    } catch (error) {\r\n      console.log(error);\r\n    \r\n    }\r\n  };\r\n  editActivity = async (activity: ActivityFormValues) => {\r\n   \r\n    try {\r\n      await agent.Activities.update(activity);\r\n      runInAction(() => {\r\n        if(activity.id){\r\n          let editedActivity = {...this.getActivity(activity.id),...activity}\r\n           this.activityRegistry.set(activity.id, editedActivity as Activity);\r\n           this.selectedActivity = editedActivity as Activity;\r\n        }\r\n       \r\n        \r\n      \r\n      });\r\n     \r\n    } catch (error) {\r\n      console.log(error);\r\n    \r\n    }\r\n  };\r\n  deleteActivity = async (id: string) => {\r\n    this.setLoading(true);\r\n    try {\r\n      await agent.Activities.delete(id);\r\n      runInAction(() => {\r\n        this.activityRegistry.delete(id);\r\n      });\r\n      this.setLoading(false);\r\n    } catch (error) {\r\n      console.log(error);\r\n      this.setLoading(false);\r\n    }\r\n  };\r\n  updateAttendance = async () =>{\r\n    const user = store.userStore.user;\r\n    this.loading = true;\r\n    try{\r\n      await agent.Activities.attend(this.selectedActivity!.id)\r\n      runInAction(() =>{\r\n        if(this.selectedActivity?.isGoing){\r\n          this.selectedActivity.attendees = this.selectedActivity.attendees?.filter(a=> a.username !==user?.username)\r\n          this.selectedActivity.isGoing = false;\r\n        }else{\r\n          const attendee = new Profile(user!)\r\n          this.selectedActivity?.attendees?.push(attendee);\r\n          this.selectedActivity!.isGoing = true;\r\n        }\r\n        this.activityRegistry.set(this.selectedActivity!.id,this.selectedActivity!)\r\n      })\r\n    }catch(error){\r\n      console.log(error);\r\n    }\r\n    finally{\r\n      runInAction(() =>this.loading=false);\r\n    }\r\n  }\r\n  cancelActivityToggle=async()=>{\r\n    this.loading=true;\r\n    try{\r\n      await agent.Activities.attend(this.selectedActivity!.id);\r\n      runInAction(() =>{\r\n        this.selectedActivity!.isCancelled = !this.selectedActivity!.isCancelled;\r\n        this.activityRegistry.set(this.selectedActivity!.id,this.selectedActivity!);\r\n      })\r\n    }catch(error){\r\n      console.log(error);\r\n    }finally{\r\n      runInAction(() =>this.loading=false)\r\n    }\r\n  }\r\n  clearSelectedActivity =()=>{\r\n    this.selectedActivity = undefined;\r\n  }\r\n  updateAttendeeFollowing = (username:string) =>{\r\n    this.activityRegistry.forEach(activity=> {\r\n      activity.attendees.forEach(attendee=>{\r\n        if(attendee.username===username){\r\n          attendee.following?attendee.followersCount--:attendee.followersCount++;\r\n          attendee.following= !attendee.following;\r\n          \r\n\r\n        }\r\n      })\r\n    })\r\n  }\r\n}\r\n","import { makeAutoObservable, reaction, runInAction } from \"mobx\";\r\nimport agent from \"../api/agent\";\r\nimport { Photo, Profile } from \"../models/profile\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class ProfilesStore {\r\n  profile: Profile | null = null;\r\n  loadingProfile = false;\r\n  uploading = false;\r\n  loading = false;\r\n  loadingDelete = false;\r\n  followings: Profile[] = [];\r\n  loadingFollowings = false;\r\n  activeTab =0;\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n    reaction(()=>this.activeTab, activeTab=>{\r\n      if(activeTab===3||activeTab===4){\r\n        const predicate = activeTab===3?\"followers\":\"followings\";\r\n        this.loadFollowings(predicate)\r\n      }else{\r\n        this.followings =[];\r\n      }\r\n    })\r\n  }\r\nsetActiveTab(activeTab:any){\r\n  this.activeTab = activeTab\r\n}\r\n  get isCurrentUser() {\r\n    if (store.userStore.user && this.profile) {\r\n      return store.userStore.user.username === this.profile.username;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  loadProfile = async (username: string) => {\r\n    this.loadingProfile = true;\r\n    try {\r\n      const profile = await agent.Profiles.get(username);\r\n\r\n      runInAction(() => {\r\n        this.profile = profile;\r\n        console.log(this.profile);\r\n        this.loadingProfile = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => (this.loadingProfile = false));\r\n    }\r\n  };\r\n\r\n  uploadPhoto = async (file: any) => {\r\n    this.uploading = true;\r\n    try {\r\n      const response = await agent.Profiles.uploadPhoto(file);\r\n      const photo = response.data;\r\n      runInAction(() => {\r\n        if (this.profile) {\r\n          this.profile.photos?.push(photo);\r\n          if (photo.isMain && store.userStore.user) {\r\n            store.userStore.setImage(photo.url);\r\n            this.profile.image = photo.url;\r\n          }\r\n        }\r\n        this.uploading = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => (this.uploading = false));\r\n    }\r\n  };\r\n  setMainPhoto =async (photo: Photo)=>{\r\n    this.loading = true;\r\n    try{\r\n      await agent.Profiles.setMainPhoto(photo.id);\r\n      store.userStore.setImage(photo.url);\r\n      runInAction(() =>{\r\n        if(this.profile &&this.profile.photos){\r\n          this.profile!.photos!.find(photo =>photo.isMain)!.isMain =false;\r\n          this.profile.photos.find(c =>c.id ===photo.id)!.isMain = true;\r\n          this.profile.image = photo.url;\r\n          this.loading = false;\r\n\r\n\r\n        }\r\n      })\r\n    }catch(error){\r\n      runInAction(() =>this.loading=false);\r\n      console.log(error);\r\n    }\r\n  }\r\n  deletePhoto=async (id:string)=>{\r\n    this.loadingDelete =true;\r\n    try {\r\n      await agent.Profiles.deletePhoto(id);\r\n      runInAction(() =>{\r\n        if(this.profile){\r\n          this.profile.photos = this.profile.photos?.filter(p=>p.id!==id)\r\n          this.loadingDelete=false;\r\n        }\r\n      })\r\n      \r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() =>this.loadingDelete=false);\r\n    }\r\n  }\r\n  updateFollowing = async (username: string, following:boolean)=>{\r\n    this.loading = true;\r\n    try {\r\n      await agent.Profiles.updateFollowing(username);\r\n      store.activityStore.updateAttendeeFollowing(username);\r\n      runInAction(() =>{\r\n        if(this.profile && this.profile.username !== store.userStore.user?.username && this.profile.username !==username){\r\n          following ? this.profile.followersCount++:this.profile.followersCount--;\r\n          this.profile.following = !this.profile.following;\r\n\r\n\r\n        }\r\n        if(this.profile&&this.profile.username===store.userStore.user?.username){\r\n          following\r\n            ? this.profile.followersCount++\r\n            : this.profile.followersCount--;\r\n        }\r\n        this.followings.forEach(profile =>{\r\n          if(profile.username === username){\r\n            profile.following ? profile.followersCount--: profile.followersCount++;\r\n            profile.following = !profile.following;\r\n\r\n          }\r\n        })\r\n        this.loading = false;\r\n      })\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() =>this.loading=false)\r\n    }\r\n  }\r\n  loadFollowings = async (predicate:string)=>{\r\n    this.loadingFollowings = true;\r\n    try {\r\n      const followings = await agent.Profiles.listFollowings(this.profile?.username!,predicate);\r\n      runInAction(() =>{\r\n        this.loadingFollowings=false;\r\n        this.followings = followings;\r\n      })\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() =>this.loadingFollowings=false)\r\n    }\r\n  }\r\n}\r\n","import { makeAutoObservable, runInAction } from \"mobx\";\r\nimport { history } from \"../..\";\r\nimport agent from \"../api/agent\";\r\nimport { Photo } from \"../models/profile\";\r\nimport { User, UserFormValues } from \"../models/user\";\r\nimport ModalStore from \"./modalStore\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class UserStore {\r\n  user: User | null = null;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n  get isLoggedIn() {\r\n    return !!this.user;\r\n  }\r\n\r\n  login = async (creds: UserFormValues) => {\r\n    try {\r\n      const user = await agent.Account.login(creds);\r\n      store.commonStore.setToken(user.token);\r\n      runInAction(() => (this.user = user));\r\n      store.modalStore.closeModal();\r\n      history.push(\"/activities\");\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n  logout = () => {\r\n    store.commonStore.setToken(null);\r\n    window.localStorage.removeItem(\"jwt\");\r\n    this.user = null;\r\n    history.push(\"/\");\r\n  };\r\n  getUser = async () => {\r\n    try {\r\n      const user = await agent.Account.current();\r\n      runInAction(() => (this.user = user));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  register = async (creds: UserFormValues) => {\r\n    try {\r\n      const user = await agent.Account.register(creds);\r\n      store.commonStore.setToken(user.token);\r\n      runInAction(() => (this.user = user));\r\n      store.modalStore.closeModal();\r\n      history.push(\"/activities\");\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n  setImage = (image:string)=>{\r\n    if(this.user){\r\n      this.user.image=image;\r\n    }\r\n    \r\n  }\r\n}\r\n","import { createContext, useContext } from \"react\";\r\nimport ActivityStore from \"./activityStore\";\r\nimport CommentStore from \"./commentStore\";\r\nimport CommonStore from \"./commonStore\";\r\nimport ModalStore from \"./modalStore\";\r\nimport ProfilesStore from \"./profilesStore\";\r\nimport UserStore from \"./userStore\";\r\n\r\ninterface Store {\r\n  activityStore: ActivityStore;\r\n  commonStore: CommonStore;\r\n  userStore: UserStore;\r\n  modalStore:ModalStore;\r\n  profilesStore: ProfilesStore;\r\n  commentStore:CommentStore;\r\n}\r\n\r\nexport const store: Store = {\r\n    activityStore: new ActivityStore(),\r\n    commonStore: new CommonStore(),\r\n    userStore: new UserStore(),\r\n    modalStore: new ModalStore(),\r\n    profilesStore: new ProfilesStore(),\r\n    commentStore:new CommentStore(),\r\n};\r\n\r\n\r\nexport const StoreContext = createContext(store)\r\n\r\n\r\nexport function useStore(){\r\n    return useContext(StoreContext)\r\n}","import { makeAutoObservable, reaction, runInAction } from \"mobx\";\r\nimport agent from \"../api/agent\";\r\nimport { ServerError } from \"../models/serverError\";\r\n\r\nexport default class CommonStore{\r\n    error: ServerError|null = null;\r\n    token: string|null = window.localStorage.getItem('jwt');\r\n    appLoaded = false;\r\n    constructor(){\r\n        makeAutoObservable(this)\r\n\r\n        reaction(()=>this.token, token=>{\r\n            if(token){\r\n                window.localStorage.setItem('jwt',token)\r\n            }\r\n            else {\r\n                window.localStorage.removeItem('jwt')\r\n            }\r\n        })\r\n    }\r\n    setServerError = (error:ServerError)=>{\r\n        this.error = error;\r\n    }\r\n\r\n    setToken = (token:string|null)=>{\r\n       \r\n        this.token=token;\r\n    }\r\n    setAppLoaded=()=>{\r\n        this.appLoaded = true;\r\n    }\r\n \r\n}","import { makeAutoObservable } from \"mobx\";\r\nimport { boolean } from \"yup/lib/locale\";\r\ninterface Modal{\r\n    open: boolean;\r\n    body: JSX.Element|null;\r\n}\r\nexport default class ModalStore {\r\n    modal:Modal={\r\n        open: false,\r\n        body: null\r\n\r\n    }\r\n    constructor (){\r\n        makeAutoObservable(this)\r\n    }\r\n\r\n    openModal = (content: JSX.Element)=>{\r\n        this.modal.open = true;\r\n        this.modal.body = content;\r\n    }\r\n    closeModal = ()=>{\r\n        this.modal.open = false;\r\n        this.modal.body = null;\r\n    }\r\n}","import { HubConnection, HubConnectionBuilder, LogLevel } from \"@microsoft/signalr\";\r\nimport { makeAutoObservable, runInAction } from \"mobx\";\r\nimport { ChatComment } from \"../models/comment\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class CommentStore{\r\n    comments: ChatComment[] =[];\r\n    hubConnection:HubConnection | null = null;\r\n    constructor(){\r\n        makeAutoObservable(this)\r\n    }\r\n    createHubConnection = (activityId: string)=>{\r\n        if(store.activityStore.selectedActivity){\r\n            this.hubConnection = new HubConnectionBuilder()\r\n            .withUrl(`${process.env.REACT_APP_CHAT_URL}?activityId=`+activityId,{\r\n                accessTokenFactory:()=>store.userStore.user?.token!\r\n            })\r\n            .withAutomaticReconnect()\r\n            .configureLogging(LogLevel.Information)\r\n            .build();\r\n            this.hubConnection.start().catch((error)=>console.log(\"error\",error));\r\n\r\n            this.hubConnection.on(\"LoadComments\",(comments:ChatComment[]) =>{\r\n                runInAction(() =>{\r\n                    comments.forEach(comment=>{\r\n                        comment.createdAt=new Date(comment.createdAt+\"z\");\r\n                    })\r\n                    this.comments = comments\r\n                \r\n                })\r\n            });\r\n            this.hubConnection.on('RecieveComment',(comment:ChatComment)=>{\r\n                runInAction(() =>{\r\n                    comment.createdAt = new Date(comment.createdAt);\r\n                    this.comments.unshift(comment)})\r\n            })\r\n        }\r\n    }\r\n    stopHubConnection = ()=>{\r\n        this.hubConnection?.stop().catch(error=>console.log(\"error\",error))\r\n    }\r\n    clearComments =()=>{\r\n        this.comments = [];\r\n        this.stopHubConnection();\r\n    }\r\n    addComment =async(values:any)=>{\r\n            values.activityId = store.activityStore.selectedActivity?.id;\r\n            try {\r\n\r\n                await this.hubConnection?.invoke(\"SendComment\",values)\r\n                \r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n    }\r\n}","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport { Button, Container, Dropdown, Image, Menu } from \"semantic-ui-react\";\r\nimport { useStore } from \"../stores/store\";\r\ninterface Props {}\r\nconst NavBar = ({}: Props) => {\r\n  const {\r\n    activityStore,\r\n    userStore: { user, logout },\r\n  } = useStore();\r\n  return (\r\n    <Menu inverted fixed=\"top\">\r\n      <Container>\r\n        <Menu.Item as={NavLink} to=\"/\" exact header>\r\n          <img src=\"/assets/logo.png\" alt=\"\" style={{ marginRight: \"10px\" }} />\r\n          Reactivities\r\n        </Menu.Item>\r\n        <Menu.Item as={NavLink} to=\"/activities\" name=\"Activities\" />\r\n        <Menu.Item as={NavLink} to=\"/errors\" name=\"Errors\" />\r\n        <Menu.Item>\r\n          <Button\r\n            positive\r\n            content=\"Create Activity\"\r\n            as={NavLink}\r\n            to=\"/createActivity\"\r\n          />\r\n        </Menu.Item>\r\n        <Menu.Item position=\"right\">\r\n          <Image\r\n            src={user?.image || \"/assets/user.png\"}\r\n            avatar\r\n            spaced=\"right\"\r\n          />\r\n          <Dropdown pointing=\"top left\" text={user?.displayName || \"Welcome\"}>\r\n            <Dropdown.Menu>\r\n              <Dropdown.Item\r\n                as={Link}\r\n                to={`/profile/${user?.username}`}\r\n                text=\"My Profile\"\r\n                icon=\"user\"\r\n              />\r\n              <Dropdown.Item onClick={logout} text=\"Logout\" icon=\"power\" />\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n        </Menu.Item>\r\n      </Container>\r\n    </Menu>\r\n  );\r\n};\r\n\r\nexport default observer(NavBar);\r\n","import { observer } from 'mobx-react-lite';\r\nimport React from 'react'\r\nimport Calendar from 'react-calendar'\r\nimport { Header, Menu } from 'semantic-ui-react'\r\nimport { useStore } from '../../../app/stores/store';\r\n\r\nconst ActivityFilters = () => {\r\n  const {activityStore:{predicate,setPredicate}} =useStore();\r\n    return (\r\n      <>\r\n        {\" \"}\r\n        <Menu vertical size=\"large\" style={{ width: \"100%\" }}>\r\n          <Header icon=\"filter\" attached color=\"teal\" contents=\"Filters\" />\r\n          <Menu.Item\r\n            content=\"All Activities\"\r\n            active={predicate.has(\"all\")}\r\n            onClick={() => setPredicate(\"all\", \"true\")}\r\n          />\r\n          <Menu.Item\r\n            content=\"I'm going\"\r\n            active={predicate.has(\"isGoing\")}\r\n            onClick={() => setPredicate(\"isGoing\", \"true\")}\r\n          />\r\n          <Menu.Item\r\n            content=\"I'm hosting\"\r\n            active={predicate.has(\"isHost\")}\r\n            onClick={() => setPredicate(\"isHost\", \"true\")}\r\n          />\r\n        </Menu>\r\n        <Header></Header>\r\n        <Calendar onChange={(date)=>setPredicate(\"startDate\",date as Date)}\r\n        value={predicate.get(\"startDate\")||new Date}\r\n        ></Calendar>\r\n      </>\r\n    );\r\n}\r\n\r\nexport default observer(ActivityFilters)\r\n","import { observer } from 'mobx-react-lite';\r\nimport React, { SyntheticEvent } from 'react'\r\nimport { Button, Reveal } from 'semantic-ui-react';\r\nimport { Profile } from '../../app/models/profile';\r\nimport { useStore } from '../../app/stores/store';\r\ninterface Props{\r\n    profile:Profile;\r\n\r\n}\r\n const FollowButton = ({profile}:Props) => {\r\n     const {profilesStore,userStore} = useStore();\r\n    const {updateFollowing,loading} = profilesStore\r\n    if(userStore.user?.username === profile.username)return <></>\r\n\r\n    function handleFollow (e:SyntheticEvent,username:string,){\r\n        e.preventDefault();\r\n        profile.following?updateFollowing(username,false):updateFollowing(username,true)\r\n\r\n    }\r\n    return (\r\n      <Reveal animated=\"move\">\r\n        <Reveal.Content visible style={{ width: \"100%\" }}>\r\n          <Button fluid color=\"teal\" content={profile.following?\"Following\":\"Not Following\"}></Button>\r\n        </Reveal.Content>\r\n        <Reveal.Content hidden style={{ width: \"100%\" }}>\r\n          <Button\r\n            fluid\r\n            basic\r\n            color={profile.following ? \"red\" : \"green\"}\r\n            content={profile.following ? \"Unfollow\" : \"Follow\"}\r\n            loading={loading}\r\n            onClick={(e)=>handleFollow(e,profile.username)}\r\n          ></Button>\r\n        </Reveal.Content>\r\n      </Reveal>\r\n    );\r\n}\r\n\r\nexport default observer(FollowButton)","import { observer } from 'mobx-react-lite'\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Card, Icon, Image } from 'semantic-ui-react'\r\nimport { Profile } from '../../app/models/profile'\r\nimport FollowButton from './FollowButton'\r\n\r\ninterface Props{\r\n    profile: Profile;\r\n}\r\n\r\nconst ProfileCard = ({profile}:Props) => {\r\n    return (\r\n      <Card as={Link} to={`/profile/${profile.username}`}>\r\n        <Image src={profile.image || \"/assets/user.png\"} />\r\n\r\n        <Card.Content>\r\n          <Card.Header>{profile.displayName}</Card.Header>\r\n          <Card.Description>Bio goes here</Card.Description>\r\n        </Card.Content>\r\n        <Card.Content>\r\n          <Icon name=\"user\" />\r\n          {profile.followersCount} followers\r\n        </Card.Content>\r\n        <FollowButton profile={profile} />\r\n      </Card>\r\n    );\r\n}\r\n\r\nexport default observer(ProfileCard) \r\n","import { observer } from 'mobx-react-lite'\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Image, List, Popup } from 'semantic-ui-react'\r\nimport { Profile } from '../../../app/models/profile'\r\nimport ProfileCard from '../../profiles/ProfileCard'\r\ninterface Props{\r\n    attendees:Profile[],\r\n\r\n}\r\nconst ActivityListItemAttendee = ({attendees}: Props) => {\r\n    const styles={\r\n        borderColor:\"orange\",\r\n        borderWidth:2\r\n    }\r\n    return (\r\n        <List horizontal>\r\n            {attendees.map((attendee)=>(\r\n                 <Popup hoverable key={attendee.username} trigger={\r\n                  <List.Item as={Link} to={`/profile/${attendee.username}`}>\r\n            <Image size='mini' circular src={attendee.image||\"/assets/user.png\"} bordered style={attendee.following?styles:null}/>\r\n        </List.Item>    \r\n                }>\r\n                    <Popup.Content>\r\n                    <ProfileCard profile={attendee}/>\r\n                    </Popup.Content>\r\n                </Popup>\r\n            \r\n              \r\n            ))}\r\n        \r\n       \r\n        </List>\r\n    )\r\n}\r\n\r\nexport default observer( ActivityListItemAttendee)\r\n","import { format } from \"date-fns\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React, { SyntheticEvent, useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Icon, Item, Label, Segment } from \"semantic-ui-react\";\r\nimport { Activity } from \"../../../app/models/activity\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport ActivityListItemAttendee from \"./ActivityListItemAttendee\";\r\ninterface Props {\r\n  activity: Activity;\r\n}\r\nconst ActivityListItem = ({ activity }: Props) => {\r\n  const { activityStore } = useStore();\r\n  const { deleteActivity, ActivitiesByDate, loading } = activityStore;\r\n  const [target, setTarget] = useState(\"\");\r\n\r\n  function handleActivityDelete(\r\n    e: SyntheticEvent<HTMLButtonElement>,\r\n    id: string\r\n  ) {\r\n    setTarget(e.currentTarget.name);\r\n    deleteActivity(id);\r\n  }\r\n  return (\r\n    <Segment.Group>\r\n      <Segment>\r\n        {activity.isCancelled&&(\r\n          <Label attached=\"top\" color=\"red\" content=\"Activity has been Canceled\"style={{textAlign: \"center\",}} />\r\n        )}\r\n        <Item.Group>\r\n          <Item>\r\n            <Item.Image\r\n              size=\"tiny\"\r\n              circular\r\n              src={`/assets/user.png`}\r\n            ></Item.Image>\r\n          </Item>\r\n          <Item.Content>\r\n            <Item.Header as={Link} to={activity.host?.image||`/activities/${activity.id}`}>\r\n              {activity.title}{\" \"}\r\n            </Item.Header>\r\n            <Item.Description>Hosted by <Link to={`/profile/${activity.host?.username}`} >{activity.host?.displayName}</Link></Item.Description>\r\n            {activity.isHost&&(\r\n              <Item.Description>\r\n                <Label basic color=\"orange\">\r\n                  Your Are hosting this activity\r\n                </Label>\r\n              </Item.Description>\r\n            )}\r\n            {activity.isGoing && !activity.isHost &&(\r\n              <Item.Description>\r\n                <Label basic color=\"green\">\r\n                  Your are attending this activity\r\n                </Label>\r\n              </Item.Description>\r\n            )}\r\n          </Item.Content>\r\n        </Item.Group>\r\n      </Segment>\r\n      <Segment>\r\n        <span>\r\n          <Icon name=\"clock\"></Icon>\r\n          {format( activity.date!,\"dd MMM yyyy h:mm aa\")}\r\n          <Icon name=\"marker\" />\r\n          {activity.venue}\r\n        </span>\r\n      </Segment>\r\n      <Segment secondary>\r\n       <ActivityListItemAttendee attendees={activity.attendees!}></ActivityListItemAttendee>\r\n      </Segment>\r\n      <Segment clearing>\r\n        <span>{activity.description}</span>\r\n        <Button \r\n          as={Link}\r\n          to={`/activities/${activity.id}`}\r\n          color=\"teal\"\r\n          floated=\"right\"\r\n          content=\"view\"\r\n          ></Button>\r\n      </Segment>\r\n    </Segment.Group>\r\n  );\r\n};\r\n\r\nexport default observer(ActivityListItem);\r\n","import { observer } from 'mobx-react-lite';\r\nimport React, { Fragment } from 'react'\r\nimport { Header, Item, Segment } from 'semantic-ui-react';\r\nimport { useStore } from '../../../app/stores/store';\r\nimport ActivityListItem from './ActivityListItem';\r\n\r\n\r\n\r\n\r\nconst ActivityList = () => { \r\n  \r\n  const {activityStore} = useStore();\r\n  const {ActivitiesByDate,groupedActivities} = activityStore;\r\n  \r\n    return (\r\n      <>\r\n      {groupedActivities.map(([group,activities])=>(\r\n        <Fragment key={group}>\r\n          <Header sub color=\"teal\">\r\n            {group}\r\n          </Header>\r\n          {activities.map((activity) => {\r\n              return (\r\n                <ActivityListItem key={activity.id} activity={activity}></ActivityListItem>\r\n              );\r\n            })}\r\n        </Fragment>\r\n      ))}\r\n      \r\n      \r\n      \r\n        \r\n      </>\r\n    \r\n    )\r\n}\r\n\r\nexport default observer(ActivityList)\r\n","import React, { Fragment } from \"react\";\r\nimport { Segment, Button, Placeholder } from \"semantic-ui-react\";\r\n\r\nexport default function ActivityListItemPlaceholder() {\r\n  return (\r\n    <Fragment>\r\n      <Placeholder fluid style={{ marginTop: 25 }}>\r\n        <Segment.Group>\r\n          <Segment style={{ minHeight: 110 }}>\r\n            <Placeholder>\r\n              <Placeholder.Header image>\r\n                <Placeholder.Line />\r\n                <Placeholder.Line />\r\n              </Placeholder.Header>\r\n              <Placeholder.Paragraph>\r\n                <Placeholder.Line />\r\n              </Placeholder.Paragraph>\r\n            </Placeholder>\r\n          </Segment>\r\n          <Segment>\r\n            <Placeholder>\r\n              <Placeholder.Line />\r\n              <Placeholder.Line />\r\n            </Placeholder>\r\n          </Segment>\r\n          <Segment secondary style={{ minHeight: 70 }} />\r\n          <Segment clearing>\r\n            <Button disabled color=\"blue\" floated=\"right\" content=\"View\" />\r\n          </Segment>\r\n        </Segment.Group>\r\n      </Placeholder>\r\n    </Fragment>\r\n  );\r\n}\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Button, Grid, Loader } from \"semantic-ui-react\";\r\nimport LoadingComponent from \"../../../app/layout/LoadingComponent\";\r\nimport { PagingParams } from \"../../../app/models/pagination\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport ActivityDetails from \"../details/ActivityDetails\";\r\nimport ActivityForm from \"../form/ActivityForm\";\r\nimport ActivityFilters from \"./ActivityFilters\";\r\nimport ActivityList from \"./ActivityList\";\r\nimport InfiniteScroll from \"react-infinite-scroller\";\r\nimport ActivityStore from \"../../../app/stores/activityStore\";\r\nimport ActivityListItemPlaceholder from \"./ActivityListItemPlaceHolder\";\r\nconst ActivityDashboard = () => {\r\n  const { activityStore } = useStore();\r\n  const {\r\n    selectedActivity,\r\n    editMode,\r\n    activityRegistry,\r\n    setPagination,\r\n    pagination,\r\n    setPagingParams,\r\n    loadactivities,\r\n  } = activityStore;\r\n\r\n  const [loadingNext, setLoadingNext] = useState(false);\r\n\r\n  function handleGetNext() {\r\n    setLoadingNext(true);\r\n    setPagingParams(new PagingParams(pagination!.currentPage + 1));\r\n    loadactivities().then(() => setLoadingNext(false));\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (activityRegistry.size === 0) activityStore.loadactivities();\r\n  }, [activityStore, activityRegistry]);\r\n\r\n  \r\n  return (\r\n    <Grid>\r\n      <Grid.Column width=\"10\">\r\n        {activityStore.loadingInitial &&!loadingNext?(\r\n          <>\r\n          <ActivityListItemPlaceholder></ActivityListItemPlaceholder>\r\n          <ActivityListItemPlaceholder></ActivityListItemPlaceholder>\r\n          </>\r\n        ): <InfiniteScroll\r\n          pageStart={0}\r\n          loadMore={handleGetNext}\r\n          hasMore={\r\n            !loadingNext &&\r\n            !!pagination &&\r\n            pagination.currentPage < pagination.totalPages\r\n          }\r\n          initialLoad={false}\r\n          \r\n        >\r\n          <ActivityList />\r\n        </InfiniteScroll>}\r\n       \r\n      </Grid.Column>\r\n      <Grid.Column width=\"6\">\r\n        <ActivityFilters></ActivityFilters>\r\n      </Grid.Column>\r\n      <Grid.Column width={10}>\r\n        <Loader active ={loadingNext}/>\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default observer(ActivityDashboard);\r\n","import React from 'react'\r\nimport { Dimmer, Loader } from 'semantic-ui-react'\r\n\r\ninterface Props{\r\n    inverted?:boolean;\r\n    content?:string;\r\n}\r\n\r\nconst LoadingComponent = ({inverted,content=\"Loading...\"}:Props) => {\r\n    return (\r\n        <Dimmer active={true}>\r\n            <Loader content={content}/>\r\n        </Dimmer>\r\n    )\r\n}\r\n\r\nexport default LoadingComponent\r\n","import { useField } from 'formik'\r\nimport React from 'react'\r\nimport { Form, Label } from 'semantic-ui-react';\r\n\r\ninterface Props{\r\n    placeholder: string;\r\n    name:string;\r\n    label?:string;\r\n    type?:string;\r\n}\r\n\r\nconst MyTextInput = (props:Props) => {\r\n    const[field,meta] = useField(props.name);\r\n\r\n    return (\r\n        <Form.Field error={meta.touched&&!!meta.error}>\r\n            <label>{props.label}</label>\r\n            <input {...field} {...props}/>\r\n            {meta.touched &&!!meta.error?\r\n        <Label basic color=\"red\">{meta.error}</Label> :null  \r\n        }\r\n        </Form.Field>\r\n    )\r\n}\r\n\r\nexport default MyTextInput\r\n\r\n","import { ErrorMessage, Form, Formik } from \"formik\";\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\nimport React from \"react\";\r\nimport { Button, Header, Label } from \"semantic-ui-react\";\r\nimport MyTextInput from \"../../app/common/form/MyTextInput\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\nconst LoginForm = () => {\r\n  const { userStore } = useStore();\r\n  return (\r\n    <Formik\r\n      initialValues={{ email: \"\", password: \"\", error: null }}\r\n      onSubmit={(values, { setErrors }) =>\r\n        userStore\r\n          .login(values)\r\n          .catch((error) =>\r\n            setErrors({ error: \"Failed to login incorrect email or password\" })\r\n          )\r\n      }\r\n    >\r\n      {({ handleSubmit, isSubmitting, errors, isValid, dirty }) => (\r\n        <Form className=\"ui form\" onSubmit={handleSubmit} autoComplete=\"off\">\r\n          <Header\r\n            as=\"h2\"\r\n            content=\"Login to Reactivities \"\r\n            color=\"teal\"\r\n            textAlign=\"center\"\r\n          />\r\n          <MyTextInput name=\"email\" placeholder=\"Email\" />\r\n          <MyTextInput name=\"password\" placeholder=\"Password\" type=\"password\" />\r\n          <ErrorMessage\r\n            name=\"error\"\r\n            render={() => (\r\n              <Label\r\n                style={{ marginBottom: 10 }}\r\n                basic\r\n                color=\"red\"\r\n                content={errors.error}\r\n              ></Label>\r\n            )}\r\n          />\r\n          <Button\r\n            disabled={!isValid || !dirty || isSubmitting}\r\n            loading={isSubmitting}\r\n            positive\r\n            content=\"Login\"\r\n            type=\"submit\"\r\n            fluid\r\n          />\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default observer(LoginForm);\r\n","import React from 'react'\r\nimport { Message } from 'semantic-ui-react'\r\ninterface Props{\r\n    errors: any\r\n}\r\nconst ValidationErrors = ({errors}:Props) => {\r\n    console.log(errors)\r\n    return (\r\n        <Message error={true}>\r\n            {errors&&(\r\n                <Message.List>\r\n                    {errors.map((error:any,i:any)=>( \r\n                        <Message.Item key={i}>\r\n                            {error}\r\n                        </Message.Item>)\r\n                       \r\n                    )}\r\n                </Message.List>\r\n            )}\r\n        </Message>\r\n    )\r\n}\r\n\r\nexport default ValidationErrors\r\n","import { ErrorMessage, Form, Formik } from \"formik\";\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\nimport React from \"react\";\r\nimport { Button, Header, Label } from \"semantic-ui-react\";\r\nimport MyTextInput from \"../../app/common/form/MyTextInput\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport * as Yup from 'yup'\r\nimport ValidationErrors from \"../errors/ValidationErrors\";\r\nconst RegisterForm = () => {\r\n  const { userStore } = useStore();\r\n  return (\r\n    <Formik\r\n      initialValues={{displayName:\"\",username:\"\", email: \"\", password: \"\", error: null }}\r\n      onSubmit={(values, { setErrors }) =>\r\n        userStore\r\n          .register(values)\r\n          .catch((error) => setErrors({ error }))\r\n      }\r\n      validationSchema={Yup.object({\r\n          displayName: Yup.string().required(),\r\n          username: Yup.string().required(),\r\n          email: Yup.string().required().email(),\r\n          password: Yup.string().required(),\r\n      })}\r\n    >\r\n      {({ handleSubmit, isSubmitting, errors,isValid,dirty}) => (\r\n        <Form className=\"ui form error\" onSubmit={handleSubmit} autoComplete=\"off\">\r\n          <Header\r\n            as=\"h2\"\r\n            content=\"Sign Up for Reactivities \"\r\n            color=\"teal\"\r\n            textAlign=\"center\"\r\n          />\r\n          <MyTextInput name=\"displayName\" placeholder=\"Display Name\" />\r\n          <MyTextInput name=\"username\" placeholder=\"Username\" />\r\n          <MyTextInput name=\"email\" placeholder=\"Email\" />\r\n          <MyTextInput name=\"password\" placeholder=\"Password\" type=\"password\" />\r\n          <ErrorMessage\r\n            name=\"error\"\r\n            render={() => (\r\n             <ValidationErrors errors={errors.error}/>\r\n             \r\n            )}\r\n          />\r\n          <Button\r\n            disabled={!isValid||!dirty||isSubmitting}\r\n            loading={isSubmitting}\r\n            positive\r\n            content=\"Register\"\r\n            type=\"submit\"\r\n            fluid\r\n          />\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default observer(RegisterForm);\r\n","import { observer } from 'mobx-react-lite'\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button, Container, Header, Image, Segment } from 'semantic-ui-react'\r\nimport { useStore } from '../../../app/stores/store'\r\nimport LoginForm from '../../users/LoginForm'\r\nimport RegisterForm from '../../users/RegisterForm'\r\n\r\nconst HomePage = () => {\r\n    const{userStore,modalStore} = useStore();\r\n    return (\r\n      <Segment inverted textAlign=\"center\" vertical className=\"masthead\">\r\n        <Container text>\r\n          <Header as=\"h1\" inverted>\r\n            <Image\r\n              size=\"massive\"\r\n              src=\"/assets/logo.png\"\r\n              alt=\"logo\"\r\n              style={{ marginBottom: 12 }}\r\n            />\r\n            Reactivities\r\n          </Header>\r\n          {userStore.isLoggedIn ? (\r\n            <>\r\n              <Header as=\"h2\" inverted content=\"Welcome to Reactivities\" />\r\n              <Button as={Link} to=\"/activities\" size=\"huge\" inverted>\r\n                Go to Activities!\r\n              </Button>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <Button\r\n                onClick={() => modalStore.openModal(<LoginForm></LoginForm>)}\r\n                size=\"huge\"\r\n                inverted\r\n              >\r\n                Login\r\n              </Button>\r\n              <Button\r\n                onClick={() => modalStore.openModal(<RegisterForm></RegisterForm>)}\r\n                size=\"huge\"\r\n                inverted\r\n              >\r\n                Register\r\n              </Button>\r\n            </>\r\n          )}\r\n        </Container>\r\n      </Segment>\r\n    );\r\n}\r\n\r\nexport default observer(HomePage)\r\n","import { useField } from \"formik\";\r\nimport React from \"react\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n  placeholder: string;\r\n  name: string;\r\n  label?: string;\r\n  rows:number;\r\n  type?: string;\r\n}\r\n\r\nconst MyTextArea = (props: Props) => {\r\n  const [field, meta] = useField(props.name);\r\n\r\n  return (\r\n    <Form.Field error={meta.touched && !!meta.error}>\r\n      <label>{props.label}</label>\r\n      <textarea {...field} {...props} />\r\n      {meta.touched && !!meta.error ? (\r\n        <Label basic color=\"red\">\r\n          {meta.error}\r\n        </Label>\r\n      ) : null}\r\n    </Form.Field>\r\n  );\r\n};\r\n\r\nexport default MyTextArea;\r\n","import { useField } from \"formik\";\r\nimport React from \"react\";\r\nimport { Form, Label, Select } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n  placeholder: string;\r\n  name: string;\r\n  options: any;\r\n  label?: string;\r\n  type?: string;\r\n}\r\n\r\nconst MySelectInput = (props: Props) => {\r\n  const [field, meta,helpers] = useField(props.name);\r\n\r\n  return (\r\n    <Form.Field error={meta.touched && !!meta.error}>\r\n      <label>{props.label}</label>\r\n     <Select clearable\r\n     options={props.options}\r\n     value ={field.value ||null}\r\n     onChange={(e,d)=>helpers.setValue(d.value)}\r\n     onBlur={()=>helpers.setTouched(true)}\r\n     placeholder={props.placeholder}\r\n     />\r\n      {meta.touched && !!meta.error ? (\r\n        <Label basic color=\"red\">\r\n          {meta.error}\r\n        </Label>\r\n      ) : null}\r\n    </Form.Field>\r\n  );\r\n};\r\n\r\nexport default MySelectInput;\r\n","export const categoryOptions =[\r\n    {text: 'Drinks', value:'drink'},\r\n    {text: 'Culture', value:'culture'},\r\n    {text: 'Film', value:'film'},\r\n    {text: 'Food', value:'food'},\r\n    {text: 'Music', value:'music'},\r\n    {text: 'Travel', value:'travel'},\r\n]","import { useField } from \"formik\";\r\nimport React from \"react\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\n\r\nimport ReactDatePicker,{ReactDatePickerProps} from \"react-datepicker\";\r\n\r\n\r\n\r\nconst MyDateInput = (props: Partial<ReactDatePickerProps>) => {\r\n  const [field, meta,helpers] = useField(props.name!);\r\n\r\n  return (\r\n    <Form.Field error={meta.touched && !!meta.error}>\r\n      <ReactDatePicker {...field} {...props}\r\n      selected={(field.value &&new Date(field.value))||null}\r\n      onChange={value=> helpers.setValue(value)}\r\n      />\r\n      {meta.touched && !!meta.error ? (\r\n        <Label basic color=\"red\">\r\n          {meta.error}\r\n        </Label>\r\n      ) : null}\r\n    </Form.Field>\r\n  );\r\n};\r\n\r\nexport default MyDateInput;\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { ChangeEvent, useEffect, useState } from \"react\";\r\nimport { Link, useHistory, useParams } from \"react-router-dom\";\r\nimport { Button, FormField, Header, Label, Segment } from \"semantic-ui-react\";\r\nimport LoadingComponent from \"../../../app/layout/LoadingComponent\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { ErrorMessage, Field, Form, Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport MyTextInput from \"../../../app/common/form/MyTextInput\";\r\nimport MyTextArea from \"../../../app/common/form/MyTextArea\";\r\nimport MySelectInput from \"../../../app/common/form/MySelectInput\";\r\nimport { categoryOptions } from \"../../../app/common/options/categoryOptions\";\r\nimport MyDateInput from \"../../../app/common/form/MyDateInput\";\r\nimport { Activity, ActivityFormValues } from \"../../../app/models/activity\";\r\n\r\ninterface ParamStruc {\r\n  id: string;\r\n}\r\nconst ActivityForm = () => {\r\n  const history = useHistory();\r\n  const { activityStore } = useStore();\r\n  const { loadActivity } = activityStore;\r\n  const {\r\n    selectedActivity,\r\n    createActivity,\r\n    editActivity,\r\n    loading,\r\n    loadingInitial,\r\n  } = activityStore;\r\n  const { id } = useParams<ParamStruc>();\r\n  const [activity, setActivity] = useState<ActivityFormValues>(new ActivityFormValues);\r\n\r\n  const validationSchema = Yup.object({\r\n    title: Yup.string().required(\"The Activity title is required\"),\r\n    description: Yup.string().required(\"The activity description is required\"),\r\n    category: Yup.string().required(),\r\n    date: Yup.string().required(\"Date is Required\").nullable(),\r\n    city: Yup.string().required(),\r\n    venue: Yup.string().required(),\r\n  });\r\n  useEffect(() => {\r\n    if (id) loadActivity(id).then((activity) => setActivity(new ActivityFormValues(activity)));\r\n  \r\n  }, [id, loadActivity]);\r\n\r\n  const handleSubmit= async(activity:ActivityFormValues)=>{\r\n    if(!activity.id){\r\n      let newActivity = {...activity,id:uuidv4()}\r\n      createActivity(newActivity).then(()=>{\r\n        history.push(`/activities/${newActivity.id}`)\r\n      })\r\n    }else{\r\n      editActivity(activity).then(()=>{\r\n        history.push(`/activities/${activity.id}`)\r\n      })\r\n    }\r\n  }\r\n\r\n  \r\n  if (loadingInitial) return <LoadingComponent></LoadingComponent>;\r\n\r\n  return (\r\n    <Segment clearing>\r\n      <Header content=\"Activity Details\" sub color=\"teal\" />\r\n      <Formik\r\n        validationSchema={validationSchema}\r\n        initialValues={activity}\r\n        onSubmit={(values) => handleSubmit(values)}\r\n        enableReinitialize\r\n      >\r\n        {({ handleSubmit,isValid,isSubmitting,dirty }) => (\r\n          <Form className=\"ui form\" onSubmit={handleSubmit} autoComplete=\"off\">\r\n            <MyTextInput name=\"title\" placeholder=\"Title\" />\r\n            <MyTextArea rows={5} placeholder=\"Description\" name=\"description\" />\r\n            <MySelectInput\r\n              options={categoryOptions}\r\n              placeholder=\"category\"\r\n              name=\"category\"\r\n            />\r\n            <MyDateInput\r\n              placeholderText=\"Date\"\r\n              name=\"date\"\r\n              showTimeSelect\r\n              timeCaption=\"time\"\r\n              dateFormat=\"MMMM d, yyyy h:mm aa\"\r\n            />\r\n            <Header content=\"Location Details\" sub color=\"teal\" />\r\n            <MyTextInput placeholder=\"City\" name=\"city\" />\r\n            <MyTextInput placeholder=\"Venue\" name=\"venue\" />\r\n            <Button\r\n            disabled={isSubmitting||!isValid||!dirty}\r\n              loading={isSubmitting}\r\n              floated=\"right\"\r\n              positive\r\n              type=\"submit\"\r\n              content=\"Submit\"\r\n              onSubmit={handleSubmit}\r\n            />\r\n            <Button\r\n              floated=\"right\"\r\n              positive\r\n              type=\"button\"\r\n              content=\"Cancel\"\r\n              as={Link}\r\n              to=\"/Activities\"\r\n            />\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Segment>\r\n  );\r\n};\r\n\r\nexport default observer(ActivityForm);\r\n","import { Formik, Form, Field, FieldProps } from \"formik\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Segment, Header, Comment, Button, Loader } from \"semantic-ui-react\";\r\nimport MyTextArea from \"../../../app/common/form/MyTextArea\";\r\nimport { ChatComment } from \"../../../app/models/comment\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport * as Yup from \"yup\";\r\nimport { formatDistanceToNow } from \"date-fns\";\r\ninterface Props {\r\n  activityId: string;\r\n}\r\nexport default observer(function ActivityDetailedChat({ activityId }: Props) {\r\n  const { commentStore } = useStore();\r\n\r\n  useEffect(() => {\r\n    if (activityId) commentStore.createHubConnection(activityId);\r\n    return () => {\r\n      commentStore.clearComments();\r\n    };\r\n  }, [activityId, commentStore]);\r\n  return (\r\n    <>\r\n      <Segment\r\n        textAlign=\"center\"\r\n        attached=\"top\"\r\n        inverted\r\n        color=\"teal\"\r\n        style={{ border: \"none\" }}\r\n      >\r\n        <Header>Chat about this event</Header>\r\n      </Segment>\r\n      <Segment attached clearing>\r\n        <Comment.Group>\r\n          {commentStore.comments.map((comment: ChatComment) => (\r\n            <Comment key={comment.id}>\r\n              <Comment.Avatar src={comment.image || \"/assets/user.png\"} />\r\n              <Comment.Content>\r\n                <Comment.Author as={Link} to={`/profiles/${comment.username}`}>\r\n                  {comment.displayName}\r\n                </Comment.Author>\r\n                <Comment.Metadata>\r\n                  <div>{formatDistanceToNow(comment.createdAt)}</div>\r\n                </Comment.Metadata>\r\n                <Comment.Text style={{ whiteSpace: \"pre-wrap\" }}>\r\n                  {comment.body}\r\n                </Comment.Text>\r\n              </Comment.Content>\r\n            </Comment>\r\n          ))}\r\n\r\n          <Formik\r\n            onSubmit={(values, { resetForm }) =>\r\n              commentStore.addComment(values).then(() => resetForm())\r\n            }\r\n            initialValues={{ body: \"\" }}\r\n            validationSchema={Yup.object({\r\n              body: Yup.string().required(),\r\n            })}\r\n          >\r\n            {({ handleSubmit, isSubmitting, errors, isValid, dirty }) => (\r\n              <Form className=\"ui form\">\r\n                <Field name=\"body\">\r\n                  {(props: FieldProps) => (\r\n                    <div style={{ position: \"relative\" }}>\r\n                      <Loader active={isSubmitting} />\r\n                      <textarea\r\n                        placeholder=\"Enter Your Comments (Enter to submit, SHIFT + enter for new line)\"\r\n                        rows={2}\r\n                        {...props.field}\r\n                        onKeyPress={(e) => {\r\n                          if (e.key === \"Enter\" && e.shiftKey) {\r\n                            return;\r\n                          }\r\n                          if (e.key == \"Enter\" && !e.shiftKey) {\r\n                            e.preventDefault();\r\n                            isValid && handleSubmit();\r\n                          }\r\n                        }}\r\n                      ></textarea>\r\n                    </div>\r\n                  )}\r\n                </Field>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n        </Comment.Group>\r\n      </Segment>\r\n    </>\r\n  );\r\n});\r\n","import { format } from \"date-fns\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Header, Item, Segment, Image, Label } from \"semantic-ui-react\";\r\nimport { Activity } from \"../../../app/models/activity\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\n\r\nconst activityImageStyle = {\r\n  filter: \"brightness(30%)\",\r\n};\r\n\r\nconst activityImageTextStyle = {\r\n  position: \"absolute\",\r\n  bottom: \"5%\",\r\n  left: \"5%\",\r\n  width: \"100%\",\r\n  height: \"auto\",\r\n  color: \"white\",\r\n};\r\n\r\ninterface Props {\r\n  activity: Activity;\r\n}\r\n\r\nexport default observer(function ActivityDetailedHeader({ activity }: Props) {\r\n  const {\r\n    activityStore: { updateAttendance, loading, cancelActivityToggle },\r\n  } = useStore();\r\n  return (\r\n    <Segment.Group>\r\n      <Segment basic attached=\"top\" style={{ padding: \"0\" }}>\r\n        {activity.isCancelled && (\r\n          <Label\r\n            style={{ position: \"absolute\", zIndex: \"20\", left: -14, top: 20 }}\r\n            ribbon\r\n            color=\"red\"\r\n            content=\"Canceled\"\r\n          />\r\n        )}\r\n        <Image\r\n          src={`/assets/categoryImages/${activity.category}.jpg`}\r\n          fluid\r\n          style={activityImageStyle}\r\n        />\r\n        <Segment style={activityImageTextStyle} basic>\r\n          <Item.Group>\r\n            <Item>\r\n              <Item.Content>\r\n                <Header\r\n                  size=\"huge\"\r\n                  content={activity.title}\r\n                  style={{ color: \"white\" }}\r\n                />\r\n                <p>{format(activity.date!, \"dd MMM yyyy h:mm aa\")}</p>\r\n                <p>\r\n                  Hosted by{\" \"}\r\n                  <strong>\r\n                    <Link to={`/profile/${activity.host?.username}`}>\r\n                      {activity.host?.displayName}\r\n                    </Link>\r\n                  </strong>\r\n                </p>\r\n              </Item.Content>\r\n            </Item>\r\n          </Item.Group>\r\n        </Segment>\r\n      </Segment>\r\n      <Segment clearing attached=\"bottom\">\r\n        {activity.isHost ? (\r\n          <>\r\n            <Button\r\n              color={activity.isCancelled ? \"green\" : \"red\"}\r\n              floated=\"left\"\r\n              basic\r\n              content={\r\n                activity.isCancelled\r\n                  ? \"Re-Activate Activity\"\r\n                  : \"Cancel Activity\"\r\n              }\r\n              onClick={cancelActivityToggle}\r\n              loading={loading}\r\n            />\r\n            <Button\r\n              disabled={activity.isCancelled}\r\n              as={Link}\r\n              to={`/manage/${activity.id}`}\r\n              color=\"orange\"\r\n              floated=\"right\"\r\n            >\r\n              Manage Event\r\n            </Button>{\" \"}\r\n          </>\r\n        ) : activity.isGoing ? (\r\n          <Button loading={loading} onClick={updateAttendance}>\r\n            Cancel attendance\r\n          </Button>\r\n        ) : (\r\n          <Button\r\n            disabled={activity.isCancelled}\r\n            loading={loading}\r\n            onClick={updateAttendance}\r\n            color=\"teal\"\r\n          >\r\n            Join Activity\r\n          </Button>\r\n        )}\r\n      </Segment>\r\n    </Segment.Group>\r\n  );\r\n});\r\n","\r\nimport { format } from \"date-fns\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Segment, Grid, Icon } from \"semantic-ui-react\";\r\nimport { Activity } from \"../../../app/models/activity\";\r\n\r\ninterface Props {\r\n  activity: Activity;\r\n}\r\n\r\nexport default observer(function ActivityDetailedInfo({ activity }: Props) {\r\n  return (\r\n    <Segment.Group>\r\n      <Segment attached=\"top\">\r\n        <Grid>\r\n          <Grid.Column width={1}>\r\n            <Icon size=\"large\" color=\"teal\" name=\"info\" />\r\n          </Grid.Column>\r\n          <Grid.Column width={15}>\r\n            <p>{activity.description}</p>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Segment>\r\n      <Segment attached>\r\n        <Grid verticalAlign=\"middle\">\r\n          <Grid.Column width={1}>\r\n            <Icon name=\"calendar\" size=\"large\" color=\"teal\" />\r\n          </Grid.Column>\r\n          <Grid.Column width={15}>\r\n            <span>{format(activity.date!,\"dd MMM yyyy h:mm aa\")}</span>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Segment>\r\n      <Segment attached>\r\n        <Grid verticalAlign=\"middle\">\r\n          <Grid.Column width={1}>\r\n            <Icon name=\"marker\" size=\"large\" color=\"teal\" />\r\n          </Grid.Column>\r\n          <Grid.Column width={11}>\r\n            <span>\r\n              {activity.venue}, {activity.city}\r\n            </span>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Segment>\r\n    </Segment.Group>\r\n  );\r\n});\r\n","import React from \"react\";\r\nimport { Segment, List, Label, Item, Image } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Profile } from \"../../../app/models/profile\";\r\nimport { Activity } from \"../../../app/models/activity\";\r\ninterface Props {\r\n  activity: Activity;\r\n}\r\nexport default observer(function ActivityDetailedSidebar({\r\n  activity: { attendees, host },\r\n}: Props) {\r\n  if (attendees)\r\n    return (\r\n      <>\r\n        <Segment\r\n          textAlign=\"center\"\r\n          style={{ border: \"none\" }}\r\n          attached=\"top\"\r\n          secondary\r\n          inverted\r\n          color=\"teal\"\r\n        >\r\n          {attendees.length}\r\n          {attendees.length === 1 ? \"Person\" : \"People\"} going\r\n        </Segment>\r\n        <Segment attached>\r\n          <List relaxed divided>\r\n            {attendees.map((attendee) => (\r\n              <Item style={{ position: \"relative\" }} key={attendee.displayName}>\r\n                {attendee.username === host?.username && (\r\n                  <Label\r\n                    style={{ position: \"absolute\" }}\r\n                    color=\"orange\"\r\n                    ribbon=\"right\"\r\n                  >\r\n                    Host\r\n                  </Label>\r\n                )}\r\n\r\n                <Image size=\"tiny\" src={attendee.image || \"/assets/user.png\"} />\r\n                <Item.Content verticalAlign=\"middle\">\r\n                  <Item.Header as=\"h3\">\r\n                    <Link to={`/profile/${attendee.username}`}>\r\n                      {attendee.displayName}\r\n                    </Link>\r\n                  </Item.Header>\r\n                  {attendee.following && (\r\n                    <Item.Extra style={{ color: \"orange\" }}>\r\n                      Following\r\n                    </Item.Extra>\r\n                  )}\r\n                </Item.Content>\r\n              </Item>\r\n            ))}\r\n          </List>\r\n        </Segment>\r\n      </>\r\n    );\r\n  else return <div></div>;\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect } from \"react\";\r\nimport { NavLink, useParams } from \"react-router-dom\";\r\nimport { Button, Card, Grid, Image } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport ActivityDetailChat from \"./ActivityDetailedChat\";\r\nimport ActivityDetailedHeader from \"./ActivityDetailedHeader\";\r\nimport ActivityDetailedInfo from \"./ActivityDetailedInfo\";\r\nimport ActivityDetailedSideBar from \"./ActivityDetailedSideBar\";\r\n\r\ninterface ParamStruc {\r\n  id: string;\r\n}\r\n\r\nconst ActivityDetails = () => {\r\n  const params = useParams<ParamStruc>();\r\n  const { id } = params;\r\n  const { activityStore } = useStore();\r\n  const {\r\n    selectedActivity: activity,\r\n    loadActivity,\r\n    clearSelectedActivity,\r\n  } = activityStore;\r\n  console.log(params);\r\n  useEffect(() => {\r\n    if (id) {\r\n      loadActivity(id);\r\n    }\r\n\r\n    return () => {\r\n      clearSelectedActivity();\r\n    };\r\n  }, [params, loadActivity]);\r\n\r\n  if (!activity) return <></>;\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={10}>\r\n        <ActivityDetailedHeader activity={activity}></ActivityDetailedHeader>\r\n        <ActivityDetailedInfo activity={activity} />\r\n        <ActivityDetailChat activityId={activity.id} />\r\n      </Grid.Column>\r\n      <Grid.Column width={6}>\r\n        <ActivityDetailedSideBar activity={activity}></ActivityDetailedSideBar>\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default observer(ActivityDetails);\r\n","import React, { useState } from \"react\";\r\nimport { Button, Header, Segment } from \"semantic-ui-react\";\r\nimport axios from \"axios\";\r\nimport ValidationErrors from \"./ValidationErrors\";\r\n\r\nexport default function TestErrors() {\r\n  const baseUrl = process.env.REACT_APP_API_URL;\r\nconst [errors, setErrors] = useState(null);\r\n  function handleNotFound() {\r\n    axios\r\n      .get(baseUrl + \"buggy/not-found\")\r\n      .catch((err) => console.log(err.response));\r\n  }\r\n\r\n  function handleBadRequest() {\r\n    axios\r\n      .get(baseUrl + \"buggy/bad-request\")\r\n      .catch((err) => console.log(err.response));\r\n  }\r\n\r\n  function handleServerError() {\r\n    axios\r\n      .get(baseUrl + \"buggy/server-error\")\r\n      .catch((err) => console.log(err.response));\r\n  }\r\n\r\n  function handleUnauthorised() {\r\n    axios\r\n      .get(baseUrl + \"buggy/unauthorised\")\r\n      .catch((err) => console.log(err.response));\r\n  }\r\n\r\n  function handleBadGuid() {\r\n    axios\r\n      .get(baseUrl + \"activities/notaguid\")\r\n      .catch((err) => console.log(err.response));\r\n  }\r\n\r\n  function handleValidationError() {\r\n    axios.post(baseUrl + \"Activities\", {}).catch((err) => setErrors(err));\r\n  }\r\nconsole.log(errors)\r\n  return (\r\n\r\n    <>\r\n      <Header as=\"h1\" content=\"Test Error component\" />\r\n      <Segment>\r\n        <Button.Group widths=\"7\">\r\n          <Button onClick={handleNotFound} content=\"Not Found\" basic primary />\r\n          <Button\r\n            onClick={handleBadRequest}\r\n            content=\"Bad Request\"\r\n            basic\r\n            primary\r\n          />\r\n          <Button\r\n            onClick={handleValidationError}\r\n            content=\"Validation Error\"\r\n            basic\r\n            primary\r\n          />\r\n          <Button\r\n            onClick={handleServerError}\r\n            content=\"Server Error\"\r\n            basic\r\n            primary\r\n          />\r\n          <Button\r\n            onClick={handleUnauthorised}\r\n            content=\"Unauthorised\"\r\n            basic\r\n            primary\r\n          />\r\n          <Button onClick={handleBadGuid} content=\"Bad Guid\" basic primary />\r\n        </Button.Group>\r\n      </Segment>\r\n      {errors&&<ValidationErrors errors={errors}></ValidationErrors>}\r\n    </>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button, Header, Icon, Segment } from 'semantic-ui-react'\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <Segment placeholder>\r\n            <Header icon>\r\n                <Icon name = \"search\"></Icon>\r\n                Oops - Page Not Found :(\r\n            </Header>\r\n            <Segment.Inline>\r\n                <Button as={Link} to=\"/activities\" primary>\r\n                    Return to Activities Page\r\n                </Button>\r\n            </Segment.Inline>\r\n        </Segment>\r\n    )\r\n}\r\n\r\nexport default NotFound\r\n","import { observer } from 'mobx-react-lite';\r\nimport React from 'react'\r\nimport { Container, Header, Segment } from 'semantic-ui-react';\r\nimport { useStore } from '../../app/stores/store'\r\n\r\nconst ServerError = () => {\r\n    const {commonStore}  = useStore();\r\n    return (\r\n        <Container>\r\n            <Header as=\"h1\" content=\"Server Error\" />\r\n            <Header sub as=\"h5\" color=\"red\" content={commonStore.error?.message}/>\r\n            {commonStore.error?.details&&(\r\n                <Segment>\r\n                    <Header as='h4' content=\"stack trace\" color=\"teal\"/>\r\n                    <code style={{marginTop:'10px'}}>{commonStore.error.details}</code>\r\n                </Segment>\r\n            )}\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default  observer(ServerError)\r\n","import { observer } from 'mobx-react-lite'\r\nimport React from 'react'\r\nimport { Modal } from 'semantic-ui-react';\r\nimport { useStore } from '../../stores/store'\r\n\r\nconst ModalContainer = () => {\r\n    const {modalStore} = useStore();\r\n    return (\r\n        <Modal open={modalStore.modal.open} onClose={modalStore.closeModal} size=\"mini\" >\r\n            <Modal.Content>\r\n                {modalStore.modal.body}\r\n            </Modal.Content>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default observer(ModalContainer) \r\n","import { observer } from 'mobx-react-lite'\r\nimport React, { useEffect } from 'react'\r\nimport { Card, Grid, Tab } from 'semantic-ui-react';\r\nimport { useStore } from '../../app/stores/store';\r\nimport ProfileCard from './ProfileCard';\r\n\r\nconst ProfileFollowings = () => {\r\n    const {profilesStore}= useStore();\r\n    const {\r\n      profile,\r\n      followings,\r\n      loadingFollowings,\r\n      activeTab,\r\n    } = profilesStore;\r\n\r\n   \r\n    return (\r\n      <Tab.Pane loading={loadingFollowings}>\r\n        <Grid>\r\n          <Grid.Column\r\n            width={16}\r\n            content={\r\n              activeTab === 3\r\n                ? `People Following ${profile?.displayName}`\r\n                : `People ${profile?.displayName} is following`\r\n            }\r\n          ></Grid.Column>\r\n          <Grid.Column width={16}>\r\n            <Card.Group itemsPerRow={4}>\r\n              {followings.map((profile) => (\r\n                <ProfileCard key={profile.username} profile={profile} />\r\n              ))}\r\n            </Card.Group>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Tab.Pane>\r\n    );\r\n}\r\n\r\nexport default observer(ProfileFollowings)\r\n","import React from 'react'\r\nimport { Cropper } from 'react-cropper'\r\nimport 'cropperjs/dist/cropper.css'\r\ninterface Props{\r\n    setCropper: (cropper:Cropper) => void;\r\n    imagePreview: string;\r\n}\r\nconst PhotoWidgetCropper = ({setCropper,imagePreview}:Props) => {\r\n    return (\r\n        <Cropper\r\n        src={imagePreview}\r\n        style={{height:200,width:\"100%\"}}\r\n        initialAspectRatio={1}\r\n        aspectRatio ={1}\r\n        preview=\".img-preview\"\r\n        guides={false}\r\n        viewMode={1}\r\n        autoCropArea={1}\r\n        background={false}\r\n        onInitialized={cropper => setCropper(cropper)}\r\n        >\r\n            \r\n        </Cropper>\r\n    )\r\n}\r\n\r\nexport default PhotoWidgetCropper\r\n","import React, { useCallback } from \"react\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { Header, Icon } from \"semantic-ui-react\";\r\ninterface Props{\r\n    setFiles: (files:any)=>void;\r\n}\r\nconst PhotoWidgetDropZone=({setFiles}: Props)=> {\r\n    const dzStyles = {\r\n        border:'dashed 3px #eee',\r\n        borderColor:'#eee',\r\n        borderRadius: \"5px\",\r\n        paddingTop:\"20px\",\r\n        textAlign: \"center\" as \"center\",\r\n        height:200\r\n\r\n    }\r\n    const dzActive={\r\n        borderColor:'green'\r\n    }\r\n  const onDrop = useCallback((acceptedFiles) => {\r\n  setFiles(acceptedFiles.map((file:any)=>Object.assign(file,{\r\n      preview:URL.createObjectURL(file)\r\n  })));\r\n\r\n  }, [setFiles]);\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n\r\n  return (\r\n    <div {...getRootProps()} style={isDragActive?{...dzStyles,...dzActive}:dzStyles}>\r\n      <input {...getInputProps()} />\r\n     <Icon size=\"large\" name=\"upload\"/>\r\n     <Header content=\"Drop image here\"/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PhotoWidgetDropZone;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Grid, Header, Image } from \"semantic-ui-react\";\r\nimport PhotoWidgetCropper from \"./PhotoWidgetCropper\";\r\nimport PhotoWidgetDropZone from \"./PhotoWidgetDropZone\";\r\ninterface Props{\r\n    handlePhotoUpload: (file:any)=>void;\r\n    uploading: boolean;\r\n}\r\nexport const PhotoUploadWidget = ({handlePhotoUpload,uploading}:Props) => {\r\n  const [files, setFiles] = useState<any[]>([]);\r\n  const [cropper, setCropper] = useState<Cropper>();\r\n\r\n  function onCrop() {\r\n    if (cropper) {\r\n      cropper.getCroppedCanvas().toBlob((blob) => handlePhotoUpload(blob));\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    return () => {\r\n      files.forEach((file: any) => URL.revokeObjectURL(file.preview));\r\n    };\r\n  }, [files]);\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={4}>\r\n        <Header sub color=\"teal\" content=\"Step 1 - Add Photo\" />\r\n        <PhotoWidgetDropZone setFiles={setFiles} />\r\n      </Grid.Column>\r\n      <Grid.Column width={1} />\r\n      <Grid.Column width={4}>\r\n        <Header sub color=\"teal\" content=\"Step 2 - Resize Image\" />\r\n        {files && files.length > 0 && (\r\n          <PhotoWidgetCropper\r\n            setCropper={setCropper}\r\n            imagePreview={files[0].preview}\r\n          />\r\n        )}\r\n      </Grid.Column>\r\n      <Grid.Column width={1} />\r\n      <Grid.Column width={4}>\r\n        <Header sub color=\"teal\" content=\"Step 3 - Preview & Upload\" />\r\n        <><div\r\n          className=\"img-preview\"\r\n          style={{ minHeight: 200, overflow: \"hidden\", width: \"100%\" }}\r\n        />\r\n\r\n        {files &&files.length>0&&(\r\n<Button.Group widths={2}>\r\n            <Button loading={uploading} onClick={onCrop} positive icon=\"check\" color=\"green\"/>\r\n            <Button disabled={uploading} onClick={()=>setFiles([])} icon=\"close\"color=\"red\"/>\r\n        </Button.Group>\r\n        )}\r\n        \r\n        </>\r\n        \r\n      </Grid.Column>\r\n      <Grid.Column width={1} />\r\n    </Grid>\r\n  );\r\n};\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { SyntheticEvent, useState } from \"react\";\r\nimport {\r\n  Button,\r\n  ButtonGroup,\r\n  Card,\r\n  Grid,\r\n  Header,\r\n  Image,\r\n  Tab,\r\n} from \"semantic-ui-react\";\r\nimport { PhotoUploadWidget } from \"../../app/common/imageUpload/PhotoUploadWidget\";\r\nimport { Photo, Profile } from \"../../app/models/profile\";\r\nimport { useStore } from \"../../app/stores/store\";\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\nconst ProfilePhotos = () => {\r\n  const { profilesStore, userStore } = useStore();\r\n  const {\r\n    profile,\r\n    isCurrentUser,\r\n    uploadPhoto,\r\n    uploading,\r\n    loading,\r\n    setMainPhoto,\r\n    deletePhoto,\r\n    loadingDelete\r\n  } = profilesStore;\r\n  const [addPhotoMode, setAddPhotoMode] = useState(false);\r\nconst [target, setTarget] = useState<any>(\"\");\r\n  const handlePhotoUpload = (file: any) => {\r\n    uploadPhoto(file).then(() => setAddPhotoMode(false));\r\n  };\r\n\r\n  const handleSetMainPhoto=(photo:Photo,e: SyntheticEvent<HTMLButtonElement>) =>{\r\n    setTarget(e.currentTarget);\r\n    setMainPhoto(photo);\r\n  }\r\n  \r\n  const handleDeletePhoto = (\r\n    photo: Photo,\r\n    e: SyntheticEvent<HTMLButtonElement>\r\n  ) => {\r\n    if(window.confirm('Are you sure you want to delete')){\r\n       setTarget(e.currentTarget);\r\n    deletePhoto(photo.id);\r\n    }\r\n   \r\n  };\r\n  return (\r\n    <Tab.Pane>\r\n      <Grid>\r\n        <Grid.Column width={16}>\r\n          <Header floated=\"left\" icon=\"image\" content=\"Photos\" />\r\n          {isCurrentUser && (\r\n            <Button\r\n              floated=\"right\"\r\n              basic\r\n              onClick={() => setAddPhotoMode(!addPhotoMode)}\r\n            >\r\n              {addPhotoMode ? \"Cancel\" : \"Add Photo\"}\r\n            </Button>\r\n          )}\r\n        </Grid.Column>\r\n        <Grid.Column width={16}>\r\n          {addPhotoMode ? (\r\n            <PhotoUploadWidget\r\n              uploading={uploading}\r\n              handlePhotoUpload={handlePhotoUpload}\r\n            />\r\n          ) : (\r\n            profile && (\r\n              <Card.Group itemsPerRow={5}>\r\n                {profile.photos?.map((photo) => (\r\n                  <Card key={photo.id}>\r\n                    <Image src={photo.url}></Image>\r\n                    {isCurrentUser && (\r\n                      <Button.Group fluid widths={2}>\r\n                        <Button\r\n                          basic\r\n                          color=\"green\"\r\n                          name={photo.id}\r\n                          disabled={photo.isMain}\r\n                          onClick={(e) => handleSetMainPhoto(photo, e)}\r\n                          loading={target === photo.id && loading}\r\n                        >\r\n                          Main\r\n                        </Button>\r\n                        <Button\r\n                          loading={target === photo.id && loading}\r\n                          onClick={(e) => handleDeletePhoto(photo, e)}\r\n                          color=\"red\"\r\n                          icon=\"trash\"\r\n                          content=\"Delete\"\r\n                        />\r\n                      </Button.Group>\r\n                    )}\r\n                  </Card>\r\n                ))}\r\n              </Card.Group>\r\n            )\r\n          )}\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n};\r\n\r\nexport default observer(ProfilePhotos);\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Tab } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../app/models/profile\";\r\nimport ProfilesStore from \"../../app/stores/profilesStore\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport ProfileFollowings from \"./ProfileFollowings\";\r\nimport ProfilePhotos from \"./ProfilePhotos\";\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\nconst ProfileContent = ({ profile }: Props) => {\r\n  const {profilesStore}= useStore();\r\n\r\n  \r\n\r\n\r\n\r\n  const panes = [\r\n    { menuItem: \"About\", render: () => <Tab.Pane>About Content</Tab.Pane> },\r\n    {\r\n      menuItem: \"Photos\",\r\n      render: () => <ProfilePhotos ></ProfilePhotos>,\r\n    },\r\n    { menuItem: \"Events\", render: () => <Tab.Pane>Events Content</Tab.Pane> },\r\n    {\r\n      menuItem: \"Followers\",\r\n      render: () => <ProfileFollowings></ProfileFollowings>,\r\n    },\r\n    {\r\n      menuItem: \"Following\",\r\n      render: () => <Tab.Pane>following Content</Tab.Pane>,\r\n    },\r\n  ];\r\n  return (\r\n    <Tab\r\n      menu={{ fluid: true, vertical: true }}\r\n      menuPosition=\"right\"\r\n      panes={panes}\r\n      onTabChange={(e,data)=>profilesStore.setActiveTab(data.activeIndex)}\r\n    />\r\n  );\r\n};\r\n\r\nexport default observer(ProfileContent);\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport {\r\n  Button,\r\n  Divider,\r\n  Grid,\r\n  Header,\r\n  Item,\r\n  Reveal,\r\n  Segment,\r\n  Statistic,\r\n} from \"semantic-ui-react\";\r\nimport { Profile } from \"../../app/models/profile\";\r\nimport FollowButton from \"./FollowButton\";\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\nconst ProfileHeader = ({ profile }: Props) => {\r\n  return (\r\n    <Segment>\r\n      <Grid>\r\n        <Grid.Column width={12}>\r\n          <Item.Group>\r\n            <Item>\r\n              <Item.Image\r\n                avatar\r\n                size=\"small\"\r\n                src={profile.image || \"/assets/user.png\"}\r\n              />\r\n              <Item.Content verticalAlign=\"middle\">\r\n                <Header as=\"h1\" content={profile.displayName} />\r\n              </Item.Content>\r\n            </Item>\r\n          </Item.Group>\r\n        </Grid.Column>\r\n        <Grid.Column width={4}>\r\n          <Statistic.Group widths={2}>\r\n            <Statistic label=\"Followers\" value={profile.followersCount} />\r\n            <Statistic label=\"Following\" value={profile.followingCount} />\r\n          </Statistic.Group>\r\n          <Divider></Divider>\r\n          <FollowButton profile={profile}/>\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Segment>\r\n  );\r\n};\r\n\r\nexport default observer(ProfileHeader);\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport LoadingComponent from \"../../app/layout/LoadingComponent\";\r\nimport { Profile } from \"../../app/models/profile\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport ProfileContent from \"./ProfileContent\";\r\nimport ProfileHeader from \"./ProfileHeader\";\r\n\r\nconst ProfilePage = () => {\r\n  const { username } = useParams<{ username: string }>();\r\n  const { profilesStore } = useStore();\r\n  console.log(profilesStore);\r\n\r\n  const { loadingProfile, loadProfile, profile,setActiveTab } = profilesStore;\r\n\r\n  useEffect(() => {\r\n    loadProfile(username);\r\n    return ()=>{\r\n      setActiveTab(0)\r\n    }\r\n  }, [loadProfile, username]);\r\n\r\n  if (loadingProfile)\r\n    return <LoadingComponent content=\"loading profile...\"></LoadingComponent>;\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={16}>\r\n        {profile && (\r\n          <>\r\n            {}\r\n\r\n            <ProfileHeader profile={profile}></ProfileHeader>\r\n            <ProfileContent profile={profile} />\r\n          </>\r\n        )}\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default observer(ProfilePage);\r\n","import { Redirect, Route, RouteComponentProps, RouteProps } from \"react-router\";\r\nimport { useStore } from \"../stores/store\";\r\n\r\ninterface Props extends RouteProps{\r\n    component:React.ComponentType<RouteComponentProps<any>>|React.ComponentType<any>;\r\n}\r\nexport default function PrivateRoute({component:Component,...rest}:Props){\r\n    const{userStore:{isLoggedIn}}:any= useStore();\r\n\r\nreturn (\r\n    <Route {...rest} render={(props)=>isLoggedIn?<Component {...props}/>:<Redirect to=\"/\"/>} />\r\n)\r\n}","import React, { useEffect } from \"react\";\n\nimport { Container, Header } from \"semantic-ui-react\";\nimport NavBar from \"./NavBar\";\nimport ActivityDashboard from \"../../features/activities/dashboard/ActivityDashboard\";\n\nimport LoadingComponent from \"./LoadingComponent\";\nimport { useStore } from \"../stores/store\";\nimport { observer } from \"mobx-react-lite\";\nimport { Route, Router, Switch, useLocation } from \"react-router-dom\";\nimport HomePage from \"../../features/activities/Home/HomePage\";\nimport ActivityForm from \"../../features/activities/form/ActivityForm\";\nimport ActivityDetails from \"../../features/activities/details/ActivityDetails\";\nimport TestErrors from \"../../features/errors/TestError\";\nimport { ToastContainer } from \"react-toastify\";\nimport NotFound from \"../../features/errors/NotFound\";\nimport ServerError from \"../../features/errors/ServerError\";\n\nimport ModalContainer from \"../common/modals/ModalContainer\";\nimport ProfilePage from \"../../features/profiles/ProfilePage\";\nimport PrivateRoute from \"./PrivateRoute\"\nfunction App() {\n  const location = useLocation();\n  const { commonStore, userStore } = useStore();\n\nuseEffect(() => {\n  if(commonStore.token){\n    userStore.getUser().finally(()=>commonStore.setAppLoaded());\n\n  }else{\n    commonStore.setAppLoaded();\n  }\n  return () => {\n    \n  }\n}, [commonStore,userStore])\n\n\nif(!commonStore.appLoaded)return <LoadingComponent content=\"Loading App...\"/>\n\n  return (\n    <>\n    <ModalContainer></ModalContainer>\n      <ToastContainer position=\"bottom-right\" hideProgressBar />\n      <Route path=\"/\" exact component={HomePage}></Route>\n\n      <Route path={\"/(.+)\"}>\n        <>\n          <NavBar></NavBar>\n          <Container style={{ marginTop: 80 }}>\n            <Switch>\n              {\" \"}\n              <PrivateRoute path=\"/activities/:id\" component={ActivityDetails}></PrivateRoute>\n              <PrivateRoute\n                exact\n                path=\"/activities\"\n                component={ActivityDashboard}\n              ></PrivateRoute>\n              <PrivateRoute\n                key={location.key}\n                path={[\"/createActivity\", \"/manage/:id\"]}\n                component={ActivityForm}\n              ></PrivateRoute>\n              <PrivateRoute path={`/profile/:username`} component={ProfilePage}></PrivateRoute>\n              <Route path=\"/errors\" component={TestErrors}></Route>\n              <Route path=\"/server-error\" component={ServerError}></Route>\n              \n              <Route component={NotFound} />\n            </Switch>\n          </Container>\n        </>\n      </Route>\n    </>\n  );\n}\n\nexport default observer(App);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport default function ScrollToTop() {\r\n  const { pathname } = useLocation();\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [pathname]);\r\n\r\n  return null;\r\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./app/layout/styles.css\";\nimport App from \"./app/layout/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport { store, StoreContext } from \"./app/stores/store\";\nimport { BrowserRouter, Router } from \"react-router-dom\";\nimport \"react-calendar/dist/Calendar.css\";\nimport \"react-toastify/dist/ReactToastify.min.css\"\nimport {createBrowserHistory} from 'history';\nimport \"react-datepicker/dist/react-datepicker.css\"\nimport ScrollToTop from \"./app/layout/ScrollToTop\";\n\nexport const history = createBrowserHistory();\n\nReactDOM.render(\n  <StoreContext.Provider value={store}>\n    <Router history={history}>\n      <ScrollToTop/>\n      <App />\n    </Router>\n  </StoreContext.Provider>,\n\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}